S::(B)(A) -> NP:=A VP:=B
S::(A)(B) -> NPWH:=A VP:=B
S::(Bool((A)(B))) -> VP/NP:=A NP/VP:=B

VP/NP::(A) -> V:=A
VP::(A)(B) -> V:=A NP:=B
VP::(A)(B) -> V:=A PP/VP:=B
VP::(\x.A(x)&&B(x)) -> VP:=A AND VP:=B
VP::(\x.A(x)||B(x)) -> VP:=A OR VP:=B
VP::(\x.!A(x)) -> NOT VP:=A
NP/VP::(B)(A) -> NP:=A PP/VP:=B
NP/VP::(B)(A) -> NP:=A NP:=B

NP::(\x.A(x)&&B(x)) -> D ADJ:=A NP_PRED:=B
NP::(B)(A) -> NP:=A PP/NP:=B
PP/VP::(A)(B) -> P/VP:=A NP:=B
PP/NP::(A)(B) -> P/NP:=A NP:=B
PP/VP::(\x.A(x)&&B(x)) -> PP/VP:=A AND PP/VP:=B
PP/VP::(\x.A(x)||B(x)) -> PP/VP:=A OR PP/VP:=B
PP/VP::(\x.!A(x)) -> NOT PP/VP:=A
NP::(A) -> NN:=A
NP::(A) -> NP_PRED:=A
NP_PRED::(A) -> N:=A
NP_PRED::(A) -> D N:=A

NPWH::(A)(B) -> NPWH/NP:=A NP:=B
NPWH::(A)(B) -> NPWH/NP/POS:=A NP:=B
NPWH/NP/POS::(A)(B) -> NPWH/NP/POS_WAIT:=A NP_POS:=B
NP_POS::(A) -> N:=A s
NP_POS::(A) -> NN:=A s


P/VP::(\x.\y.In(x,y)) -> in
P/VP::(\x.x) -> with
P/NP::(\x.\P.\y.P(y)&&In(x,y)) -> in
P/NP::(\x.\P.P(x)) -> of
AND -> and
OR -> or
NOT -> not

N::(\y.\x.Capital(y,x)&&City(x)&&Country(y)&&In(y,x)) -> capital
N::(\y.\x.Capital(y,x)&&City(x)&&Country(y)&&In(y,x)) -> capitals
N::(\y.Country(y)) -> countries
N::(\y.Country(y)) -> country
N::(\x.City(x)) -> cities
N::(\x.City(x)) -> city
N::(\x.\y.Neighbor(x,y)) -> neighbors

V::(\P.P) -> is
V::(\P.P) -> are
V::(\x.\y.Neighbor(x,y)) -> borders
V::(\x.\y.Neighbor(x,y)) -> border

ADJ::(\x.Largest(x)) -> largest

D -> a
D -> the

NPWH::(\P.P) -> what
NPWH::(\x.\y.In(y,x)) -> where
NPWH/NP::(\Q.\P.\x.P(x)&&Q(x)) -> which
NPWH/NP/POS_WAIT::(\P.\Q.\x.\y.P(y)&&Q(y,x)) -> which
NPWH/NP::(\P.\Q.Count(\x.(P(x)&&Q(x)))) -> how many

NN::Russia -> russia
NN::Germany -> germany
NN::Ukrane -> ukrane
NN::Belarus -> belarus

NN::Moscow -> moscow
NN::Yaroslavl -> yaroslavl
NN::Piter  -> piter
NN::Vladimir -> vladimir
NN::Berlin -> berlin
NN::Kiev -> kiev
NN::Odessa -> odessa
NN::Kharkiv -> kharkiv

